{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","image","handleInputChange","e","setState","currentTarget","value","toLowerCase","handleFormSubmit","preventDefault","trim","props","onSubmit","toast","className","this","type","onChange","placeholder","Component","ImageGalleryItem","images","onClick","map","id","webformatURL","tags","src","alt","ImageGallery","find","Button","Modal","backDropRef","createRef","handleEscModal","evt","code","toggleModal","handleBackDrop","current","target","window","addEventListener","removeEventListener","photo","largeImageURL","KEY","App","imageName","page","isLoading","error","modalImg","searchImages","setTimeout","fetch","then","response","ok","json","Promise","reject","Error","data","hits","length","prevState","catch","finally","loadMore","handleForm","isOpen","findModalImage","filter","toastError","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","prevProps","scrollTo","top","document","body","scrollHeight","behavior","newestOnTop","rtl","theme","pauseOnFocusLoss","color","height","width","timeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf6b160b.chunk.js","sourcesContent":["import { Component } from 'react';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    image: '',\r\n  };\r\n  handleInputChange = e => {\r\n    this.setState({ image: e.currentTarget.value.toLowerCase() });\r\n  };\r\n  handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.image.trim() === '') {\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.image);\r\n    this.setState({ image: '' });\r\n    this.props.toast();\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleFormSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={this.state.image}\r\n            onChange={this.handleInputChange}\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n        {this.state.image === '' && (\r\n          <p className=\"text\"> Please, enter something in the search bar</p>\r\n        )}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nexport default function ImageGalleryItem({ images, onClick }) {\r\n  return images.map(({ id, webformatURL, tags }) => {\r\n    return (\r\n      <li className=\"ImageGalleryItem\" onClick={() => onClick(id)} key={id}>\r\n        <img className=\"ImageGalleryItem-image\" src={webformatURL} alt={tags} />\r\n      </li>\r\n    );\r\n  });\r\n}\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.array,\r\n  onClick: PropTypes.func,\r\n};\r\n","import ImageGalleryItem from './ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ImageGallery({ images, find }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      <ImageGalleryItem images={images} onClick={find} />\r\n    </ul>\r\n  );\r\n}\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array,\r\n  find: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\nButton.propTypes = {\r\n  onclick: PropTypes.func,\r\n};\r\n","import { Component, createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Modal extends Component {\r\n  backDropRef = createRef();\r\n  static propTypes = {\r\n    photo: PropTypes.object,\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleEscModal);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleEscModal);\r\n  }\r\n  handleEscModal = evt => {\r\n    if (evt.code !== 'Escape') return;\r\n    this.props.toggleModal();\r\n  };\r\n\r\n  handleBackDrop = evt => {\r\n    const { current } = this.backDropRef;\r\n    if (current && current !== evt.target) return;\r\n    this.props.toggleModal();\r\n  };\r\n  render() {\r\n    const { photo } = this.props;\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.handleBackDrop}>\r\n        <div className=\"Modal\">\r\n          <img\r\n            src={photo.largeImageURL}\r\n            alt={photo.tags}\r\n            className=\"modal__img\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import './App.css';\nimport { Component } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Loader from 'react-loader-spinner';\nimport Modal from './components/Modal/Modal';\nimport PropTypes from 'prop-types';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst KEY = '22313175-89def84c9551dc3c20db3bc15';\n\nclass App extends Component {\n  state = {\n    imageName: '',\n    images: [],\n    page: 1,\n    isLoading: false,\n    error: '',\n    modalImg: [],\n  };\n\n  static propTypes = { onSubmit: PropTypes.func };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.imageName !== this.state.imageName) {\n      this.setState({ images: [] });\n      this.searchImages();\n    }\n    if (prevState.page !== this.state.page) {\n      this.searchImages();\n    }\n    if (prevState.images !== this.state.images) {\n      window.scrollTo({\n        top: document.body.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  searchImages = () => {\n    const { imageName, page } = this.state;\n    this.setState({ isLoading: true, error: '' });\n    setTimeout(() => {\n      fetch(\n        `https://pixabay.com/api/?q=${imageName}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n      )\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          return Promise.reject(\n            this.setState({\n              error: new Error(`Запрос с именем ${imageName} не найдет `),\n            }),\n          );\n        })\n        .then(data => data.hits)\n        .then(images => {\n          if (images.length === 0) {\n            return this.setState({\n              error: 'Nothing found, please enter a correct keyword!',\n            });\n          }\n          this.setState(prevState => ({\n            images: [...prevState.images, ...images],\n          }));\n        })\n        .catch(error => this.setState({ error }))\n        .finally(() => this.setState({ isLoading: false }));\n    }, 1000);\n  };\n\n  loadMore = () => {\n    this.setState({ page: this.state.page + 1 });\n  };\n\n  handleForm = image => {\n    this.setState({ imageName: image });\n  };\n\n  toggleModal = () => this.setState({ isOpen: !this.state.isOpen });\n\n  findModalImage = id => {\n    this.setState(prevState => ({\n      modalImg: prevState.images.filter(image => image.id === id),\n      isOpen: !this.state.isOpen,\n    }));\n  };\n\n  toastError = () =>\n    toast.error('Nothing found, please enter a correct keyword!', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  render() {\n    const { images, isLoading, isOpen, modalImg, error } = this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleForm} toast={this.toastError} />\n        {images.length > 0 && (\n          <ImageGallery images={images} find={this.findModalImage} />\n        )}\n        {error && (\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={2500}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            theme={'colored'}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        )}\n        {/* {error && <h3 className=\"error\">{error}</h3>} */}\n        {images.length > 10 && <Button onClick={this.loadMore} />}\n        {isOpen && <Modal photo={modalImg[0]} toggleModal={this.toggleModal} />}\n        {isLoading && (\n          <div className=\"loader\">\n            <Loader\n              type=\"Puff\"\n              color=\"#00BFFF\"\n              height={100}\n              width={100}\n              timeout={3000} //3 secs\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}